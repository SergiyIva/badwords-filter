class Filter{constructor(e){let t=e?e.list:void 0;t||(t=require("./filtersets/en.json").filter),this.useRegex=!!e&&e.useRegex,this.setNewWordsList(t),this.config={},this.cleanWith=e&&e.cleanWith?e.cleanWith:"*",this.replacements=new Map([[/!/g,"i"],[/@/g,"a"],[/\$/g,"s"],[/3/g,"e"],[/8/g,"b"],[/1/g,"i"],[/ยก/g,"i"],[/5/g,"s"],[/0/g,"o"],[/4/g,"h"],[/7/g,"t"],[/9/g,"g"],[/6/g,"b"],[/8/g,"b"]])}setNewWordsList(e){this.useRegex?this.filter=new Set(e.map((e=>new RegExp(e,"g")))):this.filter=new Set(e),this.minFiltered=this.useRegex||!e.length?0:this.filter.values().next().value.length,this.useRegex||this.filter.forEach((e=>{"string"==typeof e&&e.length<this.minFiltered&&(this.minFiltered=e.length)}))}normalize(e){return e=e.toLowerCase().normalize("NFD").replace(/[\u0300-\u036f]/g,"").replace(/(\w+?)([,.])(\w+?)/gi,"$1$2 $3"),this.replacements.forEach(((t,l)=>e=e.replace(l,t))),e.replace(/ +(?= )/g,"").replace(/[^a-zA-Z\s]/g,"")}clean(e){e=e.replace(/(\w+?)([,.])(\w+?)/gi,"$1$2 $3");const t=new Set(this.getUncleanWordIndexes(e));return e.split(/ +/g).map(((e,l)=>{if(t.has(l)){let t="";if(Array.isArray(this.cleanWith))for(let l=0;l<e.length;l++)t+=this.cleanWith[Math.floor(Math.random()*this.cleanWith.length)];else t=this.cleanWith.repeat(e.length);return t}return e})).join(" ")}getAllCombos(e){return e.split(" ").map((e=>/(.)\1{1,}/.test(e)&&e.length>this.minFiltered?allPossibleCases(combos(e)):[e]))}debug(e){console.log(`Normalized:\n\t${this.normalize(e)}`),console.log(`isUnclean:\n\t${this.isUnclean(e)}`),console.log(`uncleanWordIndexes:\n\t${this.getUncleanWordIndexes(e)}`),console.log(`cleaned:\n\t${this.clean(e)}`),console.log(`getCombos:\n\t${this.getAllCombos(e)}`)}getUncleanWordIndexes(e){e=this.normalize(e);let t=[],l=this.getAllCombos(e);for(let e=0;e<l.length;e++)for(let s=0;s<l[e].length;s++)this.isWordUnclean(l[e][s])&&t.push(e);return t}isUnclean(e){let t=this.getAllCombos(this.normalize(e));for(let e=0;e<t.length;e++)for(let l=0;l<t[e].length;l++)if(this.isWordUnclean(t[e][l]))return!0;return!1}isWordUnclean(e){if(this.useRegex){let t=!1;return this.filter.forEach((l=>{l.test(e)&&(t=!0)})),t}return this.filter.has(e)}}function allPossibleCases(e){if(1===e.length)return e[0];const t=[],l=allPossibleCases(e.slice(1));for(let s=0;s<l.length;s++)for(let n=0;n<e[0].length;n++)t.push(e[0][n]+l[s]);return t}function combos(e){const t=[];let l=e[0];for(let s=1;s<=e.length;s++)l[0]==e[s]?l+=e[s]:(t.push(l),l=e[s]);const s=[];for(let e=0;e<t.length;e++){let l=[];t[e].length>=2&&l.push(t[e][0].repeat(2)),l.push(t[e][0]),s.push(l)}return s}module.exports=Filter;